// <auto-generated />
using System;
using Estacionamento.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estacionamento.Data.Migrations
{
    [DbContext(typeof(EstacionamentoDbContext))]
    [Migration("20220501212454_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Estacionamento.Data.Models.Condutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<int>("DescontosUtilizados")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TempoEstacionado")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Condutores");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.PeriodoLivre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PoliticaPrecoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PoliticaPrecoId");

                    b.ToTable("PeriodoLivre");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.PoliticaPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataBase")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FimVigencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InicioVigencia")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PoliticasPrecos");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CondutorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.PeriodoLivre", b =>
                {
                    b.HasOne("Estacionamento.Data.Models.PoliticaPreco", "PoliticaPreco")
                        .WithMany("PeriodosLivres")
                        .HasForeignKey("PoliticaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoliticaPreco");
                });

            modelBuilder.Entity("Estacionamento.Data.Models.PoliticaPreco", b =>
                {
                    b.Navigation("PeriodosLivres");
                });
#pragma warning restore 612, 618
        }
    }
}
